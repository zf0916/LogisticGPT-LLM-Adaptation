{"query_id": "TR_A1", "db_id": "t2sql", "nl_query": "Average deliveries per day across the dataset.", "gold_sql": "SELECT AVG(cnt)::float AS avg_deliveries_per_day FROM ( SELECT DATE_TRUNC('day', d.timestamp_utc) AS day, COUNT(*) AS cnt FROM public.delivery d GROUP BY day ) x;"}
{"query_id": "TR_A2", "db_id": "t2sql", "nl_query": "Which hour has the fewest deliveries?", "gold_sql": "SELECT EXTRACT(HOUR FROM d.timestamp_utc) AS hour_of_day, COUNT(*) AS cnt FROM public.delivery d GROUP BY hour_of_day ORDER BY cnt ASC, hour_of_day ASC LIMIT 1;"}
{"query_id": "TR_A3", "db_id": "t2sql", "nl_query": "Total number of events (pickup + delivery).", "gold_sql": "SELECT ( SELECT COUNT(*) FROM public.pickup p ) + ( SELECT COUNT(*) FROM public.delivery d ) AS total_events;"}
{"query_id": "TR_A4", "db_id": "t2sql", "nl_query": "For pickups, return the date with the lowest volume.", "gold_sql": "SELECT day::date AS date, cnt FROM ( SELECT DATE_TRUNC('day', p.timestamp_utc) AS day, COUNT(*) AS cnt FROM public.pickup p GROUP BY day ) s ORDER BY cnt ASC, day ASC LIMIT 1;"}
{"query_id": "TR_A5", "db_id": "t2sql", "nl_query": "Weekly delivery volumes by starting Monday.", "gold_sql": "SELECT DATE_TRUNC('week', d.timestamp_utc)::date AS week_start, COUNT(*) AS deliveries FROM public.delivery d GROUP BY week_start ORDER BY week_start ASC;"}
{"query_id": "TR_A6", "db_id": "t2sql", "nl_query": "Number of pickups recorded on each weekday (0–6).", "gold_sql": "SELECT EXTRACT(DOW FROM p.timestamp_utc) AS dow, COUNT(*) AS pickups FROM public.pickup p GROUP BY dow ORDER BY dow ASC;"}
{"query_id": "TR_A7", "db_id": "t2sql", "nl_query": "Top hour for deliveries within the dataset.", "gold_sql": "SELECT EXTRACT(HOUR FROM d.timestamp_utc) AS hour_of_day, COUNT(*) AS cnt FROM public.delivery d GROUP BY hour_of_day ORDER BY cnt DESC, hour_of_day ASC LIMIT 1;"}
{"query_id": "TR_A8", "db_id": "t2sql", "nl_query": "Total deliveries per month (UTC).", "gold_sql": "SELECT DATE_TRUNC('month', d.timestamp_utc)::date AS month_start, COUNT(*) AS deliveries FROM public.delivery d GROUP BY month_start ORDER BY month_start ASC;"}
{"query_id": "TR_A9", "db_id": "t2sql", "nl_query": "Total pickups overall in the dataset period.", "gold_sql": "SELECT COUNT(*) AS total_pickups FROM public.pickup p;"}
{"query_id": "TR_A10", "db_id": "t2sql", "nl_query": "For deliveries, count per day and return the median day’s count (approximate via percentile).", "gold_sql": "SELECT PERCENTILE_DISC(0.5) WITHIN GROUP (ORDER BY cnt) AS median_daily_deliveries FROM ( SELECT DATE_TRUNC('day', d.timestamp_utc) AS day, COUNT(*) AS cnt FROM public.delivery d GROUP BY day ) t;"}
{"query_id": "TR_B1", "db_id": "t2sql", "nl_query": "Average acceptance-to-completion hours per region.", "gold_sql": "SELECT d.region_id, AVG(EXTRACT(EPOCH FROM (d.timestamp_utc - d.accept_ts_utc)) / 3600.0) AS avg_hours FROM public.delivery d WHERE d.timestamp_utc >= d.accept_ts_utc GROUP BY d.region_id ORDER BY avg_hours ASC, d.region_id ASC;"}
{"query_id": "TR_B2", "db_id": "t2sql", "nl_query": "Deliveries exceeding 4 hours from acceptance to completion.", "gold_sql": "SELECT COUNT(*) AS deliveries_over_4h FROM public.delivery d WHERE d.timestamp_utc >= d.accept_ts_utc AND EXTRACT(EPOCH FROM (d.timestamp_utc - d.accept_ts_utc)) / 3600.0 > 4;"}
{"query_id": "TR_B3", "db_id": "t2sql", "nl_query": "For late pickups only, average lateness (hours) by region.", "gold_sql": "SELECT p.region_id, AVG(EXTRACT(EPOCH FROM (p.timestamp_utc - p.time_window_end_utc)) / 3600.0) AS avg_late_hours FROM public.pickup p WHERE p.time_window_end_utc IS NOT NULL AND p.timestamp_utc > p.time_window_end_utc GROUP BY p.region_id ORDER BY avg_late_hours DESC, p.region_id ASC;"}
{"query_id": "TR_B4", "db_id": "t2sql", "nl_query": "Share of deliveries completed within 2 hours.", "gold_sql": "SELECT 100.0 * SUM(CASE WHEN EXTRACT(EPOCH FROM (d.timestamp_utc - d.accept_ts_utc)) / 3600.0 <= 2.0 THEN 1 ELSE 0 END) / COUNT(*) AS pct_within_2h FROM public.delivery d WHERE d.timestamp_utc >= d.accept_ts_utc;"}
{"query_id": "TR_B5", "db_id": "t2sql", "nl_query": "Earliest (minimum) acceptance-to-completion hours observed.", "gold_sql": "SELECT MIN(EXTRACT(EPOCH FROM (d.timestamp_utc - d.accept_ts_utc)) / 3600.0) AS min_delivery_hours FROM public.delivery d WHERE d.timestamp_utc >= d.accept_ts_utc;"}
{"query_id": "TR_B6", "db_id": "t2sql", "nl_query": "Per city, what fraction of pickups were late?", "gold_sql": "SELECT p.city, 100.0 * SUM(CASE WHEN p.time_window_end_utc IS NOT NULL AND p.timestamp_utc > p.time_window_end_utc THEN 1 ELSE 0 END) / COUNT(*) AS pct_late FROM public.pickup p GROUP BY p.city ORDER BY pct_late DESC, p.city ASC;"}
{"query_id": "TR_B7", "db_id": "t2sql", "nl_query": "Average pickup lateness (hours) overall (late rows only).", "gold_sql": "SELECT AVG(EXTRACT(EPOCH FROM (p.timestamp_utc - p.time_window_end_utc)) / 3600.0) AS avg_late_hours FROM public.pickup p WHERE p.time_window_end_utc IS NOT NULL AND p.timestamp_utc > p.time_window_end_utc;"}
{"query_id": "TR_B8", "db_id": "t2sql", "nl_query": "For each city, 90th percentile of delivery hours.", "gold_sql": "SELECT d.city, PERCENTILE_CONT(0.9) WITHIN GROUP (ORDER BY EXTRACT(EPOCH FROM (d.timestamp_utc - d.accept_ts_utc)) / 3600.0) AS p90_hours FROM public.delivery d WHERE d.timestamp_utc >= d.accept_ts_utc GROUP BY d.city ORDER BY p90_hours DESC, d.city ASC;"}
{"query_id": "TR_B9", "db_id": "t2sql", "nl_query": "Count deliveries with negative durations (data errors).", "gold_sql": "SELECT COUNT(*) AS negative_duration_deliveries FROM public.delivery d WHERE d.timestamp_utc >= d.accept_ts_utc;"}
{"query_id": "TR_B10", "db_id": "t2sql", "nl_query": "Average delivery time (hours) per weekday.", "gold_sql": "SELECT EXTRACT(DOW FROM d.timestamp_utc) AS dow, AVG(EXTRACT(EPOCH FROM (d.timestamp_utc - d.accept_ts_utc)) / 3600.0) AS avg_hours FROM public.delivery d WHERE d.timestamp_utc >= d.accept_ts_utc GROUP BY dow ORDER BY avg_hours ASC, dow ASC;"}
{"query_id": "TR_C1", "db_id": "t2sql", "nl_query": "Deliveries per courier per day (return courier, date, count).", "gold_sql": "SELECT d.courier_id, DATE_TRUNC('day', d.timestamp_utc) AS day, COUNT(*) AS deliveries FROM public.delivery d GROUP BY d.courier_id, day ORDER BY d.courier_id ASC, day ASC;"}
{"query_id": "TR_C2", "db_id": "t2sql", "nl_query": "Courier with the highest number of deliveries in a single hour.", "gold_sql": "SELECT courier_id, hour_of_day, cnt FROM ( SELECT d.courier_id, EXTRACT(HOUR FROM d.timestamp_utc) AS hour_of_day, COUNT(*) AS cnt FROM public.delivery d GROUP BY d.courier_id, hour_of_day ) s ORDER BY cnt DESC, courier_id ASC, hour_of_day ASC LIMIT 1;"}
{"query_id": "TR_C3", "db_id": "t2sql", "nl_query": "For couriers with at least 50 deliveries, average acceptance-to-completion hours.", "gold_sql": "SELECT d.courier_id, AVG(EXTRACT(EPOCH FROM (d.timestamp_utc - d.accept_ts_utc)) / 3600.0) AS avg_hours FROM public.delivery d WHERE d.timestamp_utc >= d.accept_ts_utc GROUP BY d.courier_id HAVING COUNT(*) >= 50 ORDER BY avg_hours ASC, d.courier_id ASC;"}
{"query_id": "TR_C4", "db_id": "t2sql", "nl_query": "Per courier, average cycle time (hours) where pickup exists.", "gold_sql": "SELECT d.courier_id, AVG(EXTRACT(EPOCH FROM (d.timestamp_utc - p.timestamp_utc)) / 3600.0) AS avg_cycle_hours FROM public.delivery d JOIN public.pickup p ON d.order_id = p.order_id WHERE d.timestamp_utc >= p.timestamp_utc GROUP BY d.courier_id ORDER BY avg_cycle_hours ASC, d.courier_id ASC;"}
{"query_id": "TR_C5", "db_id": "t2sql", "nl_query": "Per courier, total pickups handled.", "gold_sql": "SELECT p.courier_id, COUNT(*) AS pickups FROM public.pickup p GROUP BY p.courier_id ORDER BY pickups DESC, p.courier_id ASC;"}
{"query_id": "TR_C6", "db_id": "t2sql", "nl_query": "Top 3 couriers by delivery volume.", "gold_sql": "SELECT d.courier_id, COUNT(*) AS deliveries FROM public.delivery d GROUP BY d.courier_id ORDER BY deliveries DESC, d.courier_id ASC LIMIT 3;"}
{"query_id": "TR_C7", "db_id": "t2sql", "nl_query": "For each courier, deliveries per region.", "gold_sql": "SELECT d.courier_id, d.region_id, COUNT(*) AS deliveries FROM public.delivery d GROUP BY d.courier_id, d.region_id ORDER BY deliveries DESC, d.courier_id ASC, d.region_id ASC;"}
{"query_id": "TR_C8", "db_id": "t2sql", "nl_query": "Courier with the lowest average cycle time (filter to at least 30 paired orders).", "gold_sql": "SELECT d.courier_id, AVG(EXTRACT(EPOCH FROM (d.timestamp_utc - p.timestamp_utc)) / 3600.0) AS avg_cycle_hours FROM public.delivery d JOIN public.pickup p ON d.order_id = p.order_id WHERE d.timestamp_utc >= p.timestamp_utc GROUP BY d.courier_id HAVING COUNT(*) >= 30 ORDER BY avg_cycle_hours ASC, d.courier_id ASC LIMIT 1;"}
{"query_id": "TR_C9", "db_id": "t2sql", "nl_query": "Average deliveries per active day for each courier (days with ≥1 delivery).", "gold_sql": "SELECT courier_id, AVG(cnt)::float AS avg_per_active_day FROM ( SELECT d.courier_id AS courier_id, DATE_TRUNC('day', d.timestamp_utc) AS day, COUNT(*) AS cnt FROM public.delivery d GROUP BY d.courier_id, day ) t GROUP BY courier_id ORDER BY avg_per_active_day DESC, courier_id ASC;"}
{"query_id": "TR_C10", "db_id": "t2sql", "nl_query": "For each courier, count of pickup-only orders attributed to them (via pickup).", "gold_sql": "SELECT p.courier_id, COUNT(*) AS pickup_only_orders FROM public.pickup p LEFT JOIN public.delivery d ON d.order_id = p.order_id WHERE d.order_id IS NULL GROUP BY p.courier_id ORDER BY pickup_only_orders DESC, p.courier_id ASC;"}
{"query_id": "TR_D1", "db_id": "t2sql", "nl_query": "List order_ids that have pickup but no delivery (limit 20).", "gold_sql": "SELECT p.order_id FROM public.pickup p LEFT JOIN public.delivery d ON d.order_id = p.order_id WHERE d.order_id IS NULL ORDER BY p.order_id ASC LIMIT 20;"}
{"query_id": "TR_D2", "db_id": "t2sql", "nl_query": "List order_ids that have delivery but no pickup (limit 20).", "gold_sql": "SELECT d.order_id FROM public.delivery d LEFT JOIN public.pickup p ON p.order_id = d.order_id WHERE p.order_id IS NULL ORDER BY d.order_id ASC LIMIT 20;"}
{"query_id": "TR_D3", "db_id": "t2sql", "nl_query": "For each region, count pickup-only orders.", "gold_sql": "SELECT p.region_id, COUNT(*) AS pickup_only_orders FROM public.pickup p LEFT JOIN public.delivery d ON d.order_id = p.order_id WHERE d.order_id IS NULL GROUP BY p.region_id ORDER BY pickup_only_orders DESC, p.region_id ASC;"}
{"query_id": "TR_D4", "db_id": "t2sql", "nl_query": "For each city, count delivery-only orders.", "gold_sql": "SELECT d.city, COUNT(*) AS delivery_only_orders FROM public.delivery d LEFT JOIN public.pickup p ON p.order_id = d.order_id WHERE p.order_id IS NULL GROUP BY d.city ORDER BY delivery_only_orders DESC, d.city ASC;"}
{"query_id": "TR_D5", "db_id": "t2sql", "nl_query": "Count orders where delivery completion precedes acceptance.", "gold_sql": "SELECT COUNT(*) AS bad_orders FROM public.delivery d WHERE d.timestamp_utc >= d.accept_ts_utc;"}
{"query_id": "TR_D6", "db_id": "t2sql", "nl_query": "Count orders where delivery completion precedes pickup event.", "gold_sql": "SELECT COUNT(*) AS bad_cycle FROM public.delivery d JOIN public.pickup p ON p.order_id = d.order_id WHERE d.timestamp_utc < p.timestamp_utc;"}
{"query_id": "TR_D7", "db_id": "t2sql", "nl_query": "Total number of chronology-violating orders (union of violations).", "gold_sql": "WITH del_bad AS ( SELECT d.order_id FROM public.delivery d WHERE d.timestamp_utc >= d.accept_ts_utc ), cycle_bad AS ( SELECT d.order_id FROM public.delivery d JOIN public.pickup p ON p.order_id = d.order_id WHERE d.timestamp_utc >= d.accept_ts_utc AND d.timestamp_utc < p.timestamp_utc ) SELECT COUNT(DISTINCT order_id) AS chronology_violations FROM ( SELECT order_id FROM del_bad UNION SELECT order_id FROM cycle_bad ) u;"}
{"query_id": "TR_D8", "db_id": "t2sql", "nl_query": "Share of pickup-only orders across all pickups.", "gold_sql": "WITH totals AS ( SELECT COUNT(*) AS total_pickups FROM public.pickup p ), po AS ( SELECT COUNT(*) AS pickup_only FROM public.pickup p LEFT JOIN public.delivery d ON d.order_id = p.order_id WHERE d.order_id IS NULL ) SELECT 100.0 * po.pickup_only / NULLIF(totals.total_pickups, 0) AS pct_pickup_only FROM totals, po;"}
{"query_id": "TR_D9", "db_id": "t2sql", "nl_query": "For each courier, number of delivery-only orders.", "gold_sql": "SELECT d.courier_id, COUNT(*) AS delivery_only_orders FROM public.delivery d LEFT JOIN public.pickup p ON p.order_id = d.order_id WHERE p.order_id IS NULL GROUP BY d.courier_id ORDER BY delivery_only_orders DESC, d.courier_id ASC;"}
{"query_id": "TR_D10", "db_id": "t2sql", "nl_query": "For each region, chronology-violating order count.", "gold_sql": "WITH u AS ( SELECT d.order_id, d.region_id FROM public.delivery d WHERE d.timestamp_utc >= d.accept_ts_utc UNION SELECT d.order_id, d.region_id FROM public.delivery d JOIN public.pickup p ON p.order_id = d.order_id WHERE d.timestamp_utc >= d.accept_ts_utc AND d.timestamp_utc < p.timestamp_utc ) SELECT region_id, COUNT(DISTINCT order_id) AS violations FROM u GROUP BY region_id ORDER BY violations DESC, region_id ASC;"}
{"query_id": "TR_E1", "db_id": "t2sql", "nl_query": "Deliveries by AOI type (descending).", "gold_sql": "SELECT d.aoi_type, COUNT(*) AS deliveries FROM public.delivery d GROUP BY d.aoi_type ORDER BY deliveries DESC, d.aoi_type ASC;"}
{"query_id": "TR_E2", "db_id": "t2sql", "nl_query": "Pickups by region_id (descending).", "gold_sql": "SELECT p.region_id, COUNT(*) AS pickups FROM public.pickup p GROUP BY p.region_id ORDER BY pickups DESC, p.region_id ASC;"}
{"query_id": "TR_E3", "db_id": "t2sql", "nl_query": "Average delivery time per region (hours).", "gold_sql": "SELECT d.region_id, AVG(EXTRACT(EPOCH FROM (d.timestamp_utc - d.accept_ts_utc)) / 3600.0) AS avg_hours FROM public.delivery d WHERE d.timestamp_utc >= d.accept_ts_utc GROUP BY d.region_id ORDER BY avg_hours DESC, d.region_id ASC;"}
{"query_id": "TR_E4", "db_id": "t2sql", "nl_query": "Which city handled the fewest pickups?", "gold_sql": "SELECT p.city, COUNT(*) AS pickups FROM public.pickup p GROUP BY p.city ORDER BY pickups ASC, p.city ASC LIMIT 1;"}
{"query_id": "TR_E5", "db_id": "t2sql", "nl_query": "For each city, percentage share of total deliveries.", "gold_sql": "SELECT d.city, 100.0 * COUNT(*) / SUM(COUNT(*)) OVER () AS percentage FROM public.delivery d GROUP BY d.city ORDER BY percentage DESC, d.city ASC;"}
{"query_id": "TR_E6", "db_id": "t2sql", "nl_query": "Deliveries by region and AOI type.", "gold_sql": "SELECT d.region_id, d.aoi_type, COUNT(*) AS deliveries FROM public.delivery d GROUP BY d.region_id, d.aoi_type ORDER BY deliveries DESC, d.region_id ASC, d.aoi_type ASC;"}
{"query_id": "TR_E7", "db_id": "t2sql", "nl_query": "Top 2 cities by pickup volume.", "gold_sql": "SELECT p.city, COUNT(*) AS pickups FROM public.pickup p GROUP BY p.city ORDER BY pickups DESC, p.city ASC LIMIT 2;"}
{"query_id": "TR_E8", "db_id": "t2sql", "nl_query": "Average pickup lateness (late-only) per city (hours).", "gold_sql": "SELECT p.city, AVG(EXTRACT(EPOCH FROM (p.timestamp_utc - p.time_window_end_utc)) / 3600.0) AS avg_late_hours FROM public.pickup p WHERE p.time_window_end_utc IS NOT NULL AND p.timestamp_utc > p.time_window_end_utc GROUP BY p.city ORDER BY avg_late_hours DESC, p.city ASC;"}
{"query_id": "TR_E9", "db_id": "t2sql", "nl_query": "Deliveries per city per day (return top city-day).", "gold_sql": "SELECT city, day::date AS date, cnt FROM ( SELECT d.city, DATE_TRUNC('day', d.timestamp_utc) AS day, COUNT(*) AS cnt FROM public.delivery d GROUP BY d.city, day ) s ORDER BY cnt DESC, city ASC, day ASC LIMIT 1;"}
{"query_id": "TR_E10", "db_id": "t2sql", "nl_query": "Pickups per AOI type per day (return worst day-type by count).", "gold_sql": "SELECT aoi_type, day::date AS date, cnt FROM ( SELECT p.aoi_type, DATE_TRUNC('day', p.timestamp_utc) AS day, COUNT(*) AS cnt FROM public.pickup p GROUP BY p.aoi_type, day ) s ORDER BY cnt ASC, aoi_type ASC, day ASC LIMIT 1;"}
{"query_id": "TR_F1", "db_id": "t2sql", "nl_query": "Deliveries completed by courier 4173.", "gold_sql": "SELECT COUNT(*) AS deliveries_by_4173 FROM public.delivery d WHERE d.courier_id = 4173;"}
{"query_id": "TR_F2", "db_id": "t2sql", "nl_query": "Pickups handled by courier 2127.", "gold_sql": "SELECT COUNT(*) AS pickups_by_2127 FROM public.pickup p WHERE p.courier_id = 2127;"}
{"query_id": "TR_F3", "db_id": "t2sql", "nl_query": "Delivery completion time for order 4056800.", "gold_sql": "SELECT d.timestamp_utc AS delivery_completion_time FROM public.delivery d WHERE d.order_id = 4056800 ORDER BY d.timestamp_utc ASC, d.order_id ASCLIMIT 1;"}
{"query_id": "TR_F4", "db_id": "t2sql", "nl_query": "Pickup timestamp for order 724444.", "gold_sql": "SELECT p.timestamp_utc AS pickup_time FROM public.pickup p WHERE p.order_id = 724444 ORDER BY p.timestamp_utc ASC, p.order_id ASCLIMIT 1;"}
{"query_id": "TR_F5", "db_id": "t2sql", "nl_query": "For order 3143800, cycle time in hours (pickup→delivery).", "gold_sql": "SELECT EXTRACT(EPOCH FROM (d.timestamp_utc - p.timestamp_utc)) / 3600.0 AS cycle_hours FROM public.delivery d JOIN public.pickup p ON d.order_id = p.order_id WHERE d.order_id = 3143800 AND d.timestamp_utc >= p.timestamp_utc LIMIT 1;"}
{"query_id": "TR_F6", "db_id": "t2sql", "nl_query": "Deliveries recorded in region 3.", "gold_sql": "SELECT COUNT(*) AS deliveries_in_region_3 FROM public.delivery d WHERE d.region_id = 3;"}
{"query_id": "TR_F7", "db_id": "t2sql", "nl_query": "Pickups recorded in AOI type 14.", "gold_sql": "SELECT COUNT(*) AS pickups_in_aoi_type_14 FROM public.pickup p WHERE p.aoi_type = 14;"}
{"query_id": "TR_F8", "db_id": "t2sql", "nl_query": "For order 1934416, acceptance-to-completion hours.", "gold_sql": "SELECT EXTRACT(EPOCH FROM (d.timestamp_utc - d.accept_ts_utc)) / 3600.0 AS hours FROM public.delivery d WHERE d.order_id = 1934416 AND d.timestamp_utc >= d.accept_ts_utc LIMIT 1;"}
{"query_id": "TR_F9", "db_id": "t2sql", "nl_query": "Pickups in region 10 for courier 3578.", "gold_sql": "SELECT COUNT(*) AS pickups_region10_courier3578 FROM public.pickup p WHERE p.region_id = 10 AND p.courier_id = 3578;"}
{"query_id": "TR_F10", "db_id": "t2sql", "nl_query": "Deliveries in AOI ID 50.", "gold_sql": "SELECT COUNT(*) AS deliveries_in_aoi_50 FROM public.delivery d WHERE d.aoi_id = 50;"}
